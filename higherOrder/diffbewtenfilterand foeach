In JavaScript, filter() and forEach() are two array methods that serve different purposes:

filter() method:
The filter() method is used to create a new array with all the elements that pass the test implemented by the provided callback function.
It iterates through each element of the array and invokes the callback function for each element.
The callback function should return a boolean value (true or false). If the callback returns true, the element is included in the new filtered array. If the callback returns false, the element is excluded from the new array.
The original array remains unchanged, and a new array containing the filtered elements is returned.
filter() is commonly used for filtering out elements that meet a certain condition or criteria.
Example:

javascript
Copy code
const numbers = [1, 2, 3, 4, 5];

const evenNumbers = numbers.filter((num) => num % 2 === 0);
console.log(evenNumbers); // Output: [2, 4]
forEach() method:
The forEach() method is used to iterate through the elements of an array and execute a provided callback function for each element.
Unlike filter(), forEach() does not create a new array or modify the original array. It is simply used to perform some operation for each element in the array.
The callback function is called for each element in the array, but it does not return any value.
Example:

javascript
Copy code
const fruits = ['apple', 'banana', 'orange'];

fruits.forEach((fruit) => console.log(fruit));
// Output:
// apple
// banana
// orange
In summary, filter() is used for creating a new array with elements that satisfy a condition, while forEach() is used for iterating through the elements of an array and performing some operation on each element without creating a new array.